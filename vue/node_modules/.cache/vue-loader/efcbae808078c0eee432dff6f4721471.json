{"remainingRequest":"D:\\jrrg_project\\vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\jrrg_project\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\jrrg_project\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jrrg_project\\vue\\src\\views\\Property.vue?vue&type=template&id=006b7d8f&","dependencies":[{"path":"D:\\jrrg_project\\vue\\src\\views\\Property.vue","mtime":1718161743562},{"path":"D:\\jrrg_project\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1718004804271},{"path":"D:\\jrrg_project\\vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1718004808530},{"path":"D:\\jrrg_project\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1718004804271},{"path":"D:\\jrrg_project\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1718004808529},{"path":"D:\\jrrg_project\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1718004804271},{"path":"D:\\jrrg_project\\vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1718004808530},{"path":"D:\\jrrg_project\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1718004804271},{"path":"D:\\jrrg_project\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1718004808529}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}