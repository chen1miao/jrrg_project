{"remainingRequest":"D:\\jrrg_project\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jrrg_project\\vue\\src\\views\\Trade2.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\jrrg_project\\vue\\src\\views\\Trade2.vue","mtime":1718004808963},{"path":"D:\\jrrg_project\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1718004805066},{"path":"D:\\jrrg_project\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1718004808530},{"path":"D:\\jrrg_project\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1718004807517},{"path":"D:\\jrrg_project\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1718004804271},{"path":"D:\\jrrg_project\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1718004808529}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZWwtaGVhZGVyIHsKYmFja2dyb3VuZC1jb2xvcjogcmdiKDU1LCAxMjgsIDIyNCwwLjQpOwpjb2xvcjogIzMzMzsKbGluZS1oZWlnaHQ6IDYwcHg7Cn0KCi5lbC1hc2lkZSB7CiAgY29sb3I6ICMzMzM7Cn0KCi5jdXJyZW50LXBhZ2UgewogIGJhY2tncm91bmQtY29sb3I6IHJnYig1NSwgMTI4LCAyMjQpOwogIGNvbG9yOiB3aGl0ZTsgLyog6K6+572u5paH5pys6aKc6Imy77yM5Lul5aKe5Yqg5Y+v6K+75oCnICovCn0K"},{"version":3,"sources":["Trade2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmLA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Trade2.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <el-container style=\"height: 800px; border: 1px solid #eee\">\n<el-aside width=\"200px\" style=\"background-color: rgb(238, 241, 246)\">\n  <el-menu router :default-openeds=\"['1','2','3']\" :default-active=\"this.$router.path\">\n    <el-submenu index=\"1\">\n      <template slot=\"title\"><i class=\"el-icon-message\"></i>个人信息</template>\n      <el-menu-item-group>\n        <el-menu-item index=\"/changepassword\">修改密码</el-menu-item>\n        <el-menu-item index=\"/property\">当前资产</el-menu-item>\n     \n      </el-menu-item-group>\n      \n    </el-submenu>\n    <el-submenu index=\"2\">\n      <template slot=\"title\"><i class=\"el-icon-menu\"></i>市场数据</template>\n      <el-menu-item-group>\n        <el-menu-item index=\"/today\">今日大盘</el-menu-item>\n        <el-menu-item index=\"/stock1\">上交所</el-menu-item>\n        <el-menu-item index=\"/stock2\">深交所</el-menu-item>\n      </el-menu-item-group>\n        \n      </el-submenu>\n      <el-submenu index=\"3\">\n        <template slot=\"title\"><i class=\"el-icon-setting\"></i>量化交易</template>\n          <el-menu-item index=\"/trade1\">买入股票</el-menu-item>\n          <el-menu-item index=\"/trade2\" class=\"current-page\">卖出股票</el-menu-item>\n        \n        <el-submenu index=\"3-2\">\n          <template slot=\"title\">交易策略</template>\n          <el-menu-item index=\"/strategy1\">策略1</el-menu-item>\n          <el-menu-item index=\"/strategy2\">策略2</el-menu-item>\n      </el-submenu>\n    </el-submenu>\n  </el-menu>\n</el-aside>\n\n<el-container>\n  <el-header style=\"text-align: left; font-size: 16px\">\n    <el-dropdown @command=\"handleCommand\">\n      <i class=\"el-icon-more\" style=\"margin-right: 20px\"></i>\n      <el-dropdown-menu slot=\"dropdown\">\n        <el-dropdown-item command=\"home\">返回主页</el-dropdown-item>\n        <el-dropdown-item command=\"logout\">退出登录</el-dropdown-item>\n      </el-dropdown-menu>\n    </el-dropdown>\n    <span>{{ this.user.user }}</span>\n    <span>，欢迎使用 GooseGains 量化交易平台</span>\n    \n  </el-header>\n  \n  <el-main>\n  <div style=\"margin: 80px auto; background-color: rgb(55, 128, 224,0.2); width: 500px; height: 500px; padding: 20px; border-radius: 10px\">\n  <div style=\"margin: 20px 0; text-align: center; font-size: 24px\"><b>卖出股票</b></div>\n  <el-form :model=\"stock\" :rules=\"rules\" ref=\"stockForm\">\n    <el-form-item label=\"股票代码\" label-position=\"left\">\n<template #label>\n  <span style=\"margin-left: 10px;\">股票代码</span>\n</template>\n<el-input placeholder=\"请输入要卖出的股票代码\" size=\"medium\" prefix-icon=\"el-icon-s-marketing\" v-model=\"stock.sell_code\"></el-input>\n</el-form-item>\n\n<el-form-item label=\"卖出数量\" label-position=\"left\">\n<template #label>\n  <span style=\"margin-left: 10px;\">卖出数量</span>\n</template>\n<el-input placeholder=\"请输入要卖出的数量\" size=\"medium\" prefix-icon=\"el-icon-shopping-cart-2\" v-model=\"stock.sell_number\"></el-input>\n</el-form-item>\n\n<el-form-item label=\"当前价格\" label-position=\"left\">\n<template #label>\n  <span style=\"margin-left: 10px;\">当前价格</span>\n</template>\n<el-input placeholder=\"每股当前价格\" size=\"medium\" prefix-icon=\"el-icon-coin\" v-model=\"stock.sell_price\"></el-input>\n<!-- 这里还不大对，怎么修改？让这个当前价格能自动显示在表格这边 -->\n</el-form-item>\n\n<el-form-item label=\"该笔收入\" label-position=\"left\">\n<template #label>\n  <span style=\"margin-left: 10px;\">该笔支出</span>\n</template>\n<el-input placeholder=\"该笔交易收入为\" size=\"medium\" prefix-icon=\"el-icon-s-data\" v-model=\"stock.total_in\"></el-input>\n<!-- 这里还不大对，怎么修改？让这个支出自己算出来显示在表格这边 -->\n</el-form-item>\n\n<el-form-item style=\"margin: 5px 0; text-align: right\">\n<el-button type=\"primary\" size=\"small\" autocomplete=\"off\" @click=\"sell\">确定</el-button>\n</el-form-item>\n\n\n  </el-form>\n</div>\n</el-main>\n</el-container>\n</el-container>\n</template>\n\n\n<script>\nimport axios from 'axios';\n\nexport default{\nname:\"Trade\",\ndata() {\n  return {\n    user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\n    stock: {},\n    rules: {\n    }\n  }\n},\nmethods: {\n  handleCommand(command) {\n    if (command==='logout'){\n      this.$router.push('/login');\n    }\n    if (command==='home'){\n      this.$router.push('/home')\n    }   \n  },\n  watch: {\n  'stock.sell_code': function(newVal, oldVal) {\n    // 在股票代码发生变化时触发\n    // 可在此处编写获取当前价格的逻辑，例如发送 HTTP 请求到后端\n    // 假设你有一个名为 getStockPrice 的方法用来获取股票价格和花了多少钱\n    this.getStockPrice(newVal);\n  }\n},\ngetStockPrice(stockCode) {\n  // 发送 HTTP POST 请求到后端，传递当前用户ID、买入的数据量和当前选中股票的代码\n  axios.post('http://127.0.0.1:5001/trade2', {\n    id_num: this.userId, // 假设 this.userId 是当前用户的ID\n    amount_out: this.sell_number, // 假设 this.buyAmount 是买入的数据量\n    stock_code: this.sell_code // 传递当前选中股票的代码\n  })\n    .then(response => {\n      // 成功获取到股票价格和总花费\n      this.stock.sell_price = response.data.datas[0]; // 第一个元素是当前股票价格\n      this.total_in = response.data.datas[1]; // 第二个元素是总花费\n    })\n    .catch(error => {\n      console.error('获取股票价格失败：', error);\n    });\n},\nsell() {\n  this.$refs['stockForm'].validate((valid) => {\n      if (valid) {  // 表单校验合法\n              // 构造发送到后端的数据对象\n              const data = {\n                  user: localStorage.getItem('user'),\n                  stock_code: this.stock.sell_code,\n                  amount_out: this.stock.sell_number\n              };\n              // 发送POST请求到后端API端点\n              axios.post('http://127.0.0.1:5001/transaction_out', data)\n                  .then(response => {\n                      // 处理成功响应\n                      \n                      const aaa = response.data.data[\"aaa\"]\n                      const cur_price = response.data.data[\"cur_price\"]\n                      this.$message.success(\"卖出股票成功，当前价格为：\"+cur_price);\n                      // this.$message.success(\"买入股票成功\");\n                      this.$router.push(\"/Property\");\n                      return true;\n                  })\n                  .catch(error => {\n                      // 处理错误响应\n                      console.error('Error:', error);\n                      this.$message.error(\"卖出股票失败，请稍后重试\");\n                      return false;\n                  });\n          \n      }\n  });\n}\n\n}\n}\n</script>\n<style>\n.el-header {\nbackground-color: rgb(55, 128, 224,0.4);\ncolor: #333;\nline-height: 60px;\n}\n\n.el-aside {\n  color: #333;\n}\n\n.current-page {\n  background-color: rgb(55, 128, 224);\n  color: white; /* 设置文本颜色，以增加可读性 */\n}\n</style>"]}]}