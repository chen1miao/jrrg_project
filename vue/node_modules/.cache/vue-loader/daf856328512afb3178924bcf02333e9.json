{"remainingRequest":"E:\\workplace\\jrrg_project\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workplace\\jrrg_project\\vue\\src\\views\\Trade1.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\workplace\\jrrg_project\\vue\\src\\views\\Trade1.vue","mtime":1717930828772},{"path":"E:\\workplace\\jrrg_project\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1717925715604},{"path":"E:\\workplace\\jrrg_project\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1717925719721},{"path":"E:\\workplace\\jrrg_project\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1717925718625},{"path":"E:\\workplace\\jrrg_project\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1717925714604},{"path":"E:\\workplace\\jrrg_project\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1717925719721}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiAgLmVsLWhlYWRlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDU1LCAxMjgsIDIyNCwwLjQpOwogIGNvbG9yOiAjMzMzOwogIGxpbmUtaGVpZ2h0OiA2MHB4Owp9CiAgCiAgLmVsLWFzaWRlIHsKICAgIGNvbG9yOiAjMzMzOwogIH0KICAKICAuY3VycmVudC1wYWdlIHsKICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig1NSwgMTI4LCAyMjQpOwogICAgY29sb3I6IHdoaXRlOyAvKiDorr7nva7mlofmnKzpopzoibLvvIzku6Xlop7liqDlj6/or7vmgKcgKi8KICB9CiAg"},{"version":3,"sources":["Trade1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqLA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Trade1.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <el-container style=\"height: 800px; border: 1px solid #eee\">\r\n  <el-aside width=\"200px\" style=\"background-color: rgb(238, 241, 246)\">\r\n    <el-menu router :default-openeds=\"['1','2','3']\" :default-active=\"this.$router.path\">\r\n      <el-submenu index=\"1\">\r\n        <template slot=\"title\"><i class=\"el-icon-message\"></i>个人信息</template>\r\n        <el-menu-item-group>\r\n          <el-menu-item index=\"/changepassword\">修改密码</el-menu-item>\r\n          <el-menu-item index=\"/property\">当前资产</el-menu-item>\r\n       \r\n        </el-menu-item-group>\r\n        \r\n      </el-submenu>\r\n      <el-submenu index=\"2\">\r\n        <template slot=\"title\"><i class=\"el-icon-menu\"></i>市场数据</template>\r\n        <el-menu-item-group>\r\n          <el-menu-item index=\"/today\">今日大盘</el-menu-item>\r\n          <el-menu-item index=\"/stock1\">上交所</el-menu-item>\r\n          <el-menu-item index=\"/stock2\">深交所</el-menu-item>\r\n        </el-menu-item-group>\r\n          \r\n        </el-submenu>\r\n        <el-submenu index=\"3\">\r\n          <template slot=\"title\"><i class=\"el-icon-setting\"></i>量化交易</template>\r\n          \r\n            <el-menu-item index=\"/trade\" class=\"current-page\" >买入股票</el-menu-item>\r\n            <el-menu-item index=\"/trade2\">卖出股票</el-menu-item>\r\n          \r\n          <el-submenu index=\"3-2\">\r\n            <template slot=\"title\">交易策略</template>\r\n            <el-menu-item index=\"/strategy1\">策略1</el-menu-item>\r\n            <el-menu-item index=\"/strategy2\">策略2</el-menu-item>\r\n        </el-submenu>\r\n      </el-submenu>\r\n    </el-menu>\r\n  </el-aside>\r\n  \r\n  <el-container>\r\n  <el-header style=\"text-align: left; font-size: 16px\">\r\n    <el-dropdown @command=\"handleCommand\">\r\n      <i class=\"el-icon-more\" style=\"margin-right: 20px\"></i>\r\n      <el-dropdown-menu slot=\"dropdown\">\r\n        <el-dropdown-item command=\"home\">返回主页</el-dropdown-item>\r\n        <el-dropdown-item command=\"logout\">退出登录</el-dropdown-item>\r\n      </el-dropdown-menu>\r\n    </el-dropdown>\r\n    <span>{{ this.user.user }}</span>\r\n    <span>，欢迎使用 GooseGains 量化交易平台</span>\r\n    \r\n  </el-header>\r\n  \r\n  <el-main>\r\n    <div style=\"margin: 80px auto; background-color: rgb(55, 128, 224,0.2); width: 500px; height: 500px; padding: 20px; border-radius: 10px\">\r\n    <div style=\"margin: 20px 0; text-align: center; font-size: 24px\"><b>买入股票</b></div>\r\n    <el-form :model=\"stock\" :rules=\"rules\" ref=\"stockForm\">\r\n      <el-form-item label=\"股票代码\" label-position=\"left\">\r\n  <template #label>\r\n    <span style=\"margin-left: 10px;\">股票代码</span>\r\n  </template>\r\n  <el-input placeholder=\"请输入要买入的股票代码\" size=\"medium\" prefix-icon=\"el-icon-s-marketing\" v-model=\"stock.buy_code\"></el-input>\r\n</el-form-item>\r\n\r\n<el-form-item label=\"买入数量\" label-position=\"left\">\r\n  <template #label>\r\n    <span style=\"margin-left: 10px;\">买入数量</span>\r\n  </template>\r\n  <el-input placeholder=\"请输入要买入的数量\" size=\"medium\" prefix-icon=\"el-icon-shopping-cart-2\" v-model=\"stock.buy_number\"></el-input>\r\n</el-form-item>\r\n\r\n<el-form-item label=\"当前价格\" label-position=\"left\">\r\n  <template #label>\r\n    <span style=\"margin-left: 10px;\">当前价格</span>\r\n  </template>\r\n  <el-input placeholder=\"每股当前价格\" size=\"medium\" prefix-icon=\"el-icon-coin\" v-model=\"stock.buy_price\"></el-input>\r\n  <!-- 这里还不大对，怎么修改？让这个当前价格能自动显示在表格这边 -->\r\n</el-form-item>\r\n\r\n<el-form-item label=\"该笔支出\" label-position=\"left\">\r\n  <template #label>\r\n    <span style=\"margin-left: 10px;\">该笔支出</span>\r\n  </template>\r\n  <el-input placeholder=\"该笔交易支出为\" size=\"medium\" prefix-icon=\"el-icon-s-data\" v-model=\"stock.total_cost\"></el-input>\r\n  <!-- 这里还不大对，怎么修改？让这个支出自己算出来显示在表格这边 -->\r\n</el-form-item>\r\n\r\n<el-form-item style=\"margin: 5px 0; text-align: right\">\r\n  <el-button type=\"primary\" size=\"small\" autocomplete=\"off\" @click=\"buy\">确定</el-button>\r\n</el-form-item>\r\n\r\n\r\n    </el-form>\r\n  </div>\r\n  </el-main>\r\n</el-container>\r\n</el-container>\r\n</template>\r\n\r\n  \r\n  <script>\r\n  export default{\r\n  name:\"Trade\",\r\n  data() {\r\n    return {\r\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\r\n      stock: {},\r\n      rules: {\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleCommand(command) {\r\n      if (command==='logout'){\r\n        this.$router.push('/login');\r\n      }\r\n      if (command==='home'){\r\n        this.$router.push('/home')\r\n      }   \r\n    },\r\n    watch: {\r\n    'stock.buy_code': function(newVal, oldVal) {\r\n      // 在股票代码发生变化时触发\r\n      // 可在此处编写获取当前价格的逻辑，例如发送 HTTP 请求到后端\r\n      // 假设你有一个名为 getStockPrice 的方法用来获取股票价格和花了多少钱\r\n      this.getStockPrice(newVal);\r\n    }\r\n  },\r\n  getStockPrice(stockCode) {\r\n    // 发送 HTTP POST 请求到后端，传递当前用户ID、买入的数据量和当前选中股票的代码\r\n    axios.post('/trade1', {\r\n      id_num: this.userId, // 假设 this.userId 是当前用户的ID\r\n      amount_in: this.buy_number, // 假设 this.buyAmount 是买入的数据量\r\n      stock_code: this.buy_code // 传递当前选中股票的代码\r\n    })\r\n      .then(response => {\r\n        // 成功获取到股票价格和总花费\r\n        this.stock.buy_price = response.data.datas[0]; // 第一个元素是当前股票价格\r\n        this.total_cost = response.data.datas[1]; // 第二个元素是总花费\r\n      })\r\n      .catch(error => {\r\n        console.error('获取股票价格失败：', error);\r\n      });\r\n  },\r\n  buy() {\r\n    this.$refs['stockForm'].validate((valid) => {\r\n        if (valid) {  // 表单校验合法\r\n            if (this.stock.buy_code !== '1') {\r\n                this.$message.error(\"您输入的股票代码不存在\");\r\n                return false;\r\n            } else if (this.stock.buy_number !== '100') { // else if(this.stock.total_cost < this.user.cash){\r\n                this.$message.error(\"您的资金不足\");\r\n                return false;\r\n            } else {\r\n                // 构造发送到后端的数据对象\r\n                const data = {\r\n                    stock_code: this.stock.buy_code,\r\n                    amount_in: this.stock.buy_number\r\n                };\r\n\r\n                // 发送POST请求到后端API端点\r\n                axios.post('/trade1', data)\r\n                    .then(response => {\r\n                        // 处理成功响应\r\n                        this.$message.success(\"买入股票成功\");\r\n                        this.$router.push(\"/Property\");\r\n                        return true;\r\n                    })\r\n                    .catch(error => {\r\n                        // 处理错误响应\r\n                        console.error('Error:', error);\r\n                        this.$message.error(\"买入股票失败，请稍后重试\");\r\n                        return false;\r\n                    });\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n  }\r\n  }\r\n  </script>\r\n  <style>\r\n  .el-header {\r\n  background-color: rgb(55, 128, 224,0.4);\r\n  color: #333;\r\n  line-height: 60px;\r\n}\r\n  \r\n  .el-aside {\r\n    color: #333;\r\n  }\r\n  \r\n  .current-page {\r\n    background-color: rgb(55, 128, 224);\r\n    color: white; /* 设置文本颜色，以增加可读性 */\r\n  }\r\n  </style>"]}]}